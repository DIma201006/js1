
// –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –∫–æ–¥:

const numbers = [1, 5, 8, 12, 3, 15, 7, 20];
const words = ['–∫—ñ—Ç', '—Å–æ–±–∞–∫–∞', '–º–∏—à–∞', '–ø–∞–ø—É–≥–∞', '—Ö–æ–º—è–∫'];

// –§—É–Ω–∫—Ü—ñ—è countItems —Ç—É—Ç
function countItems(array, condition) {
    let count = 0
    for (const item of array) {
        if (condition(item)) {
            count += 1
        }
      

    }
    return count
}

// –£–º–æ–≤–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:========================
const isEven = num => num % 2 === 0;
const isLarge = num => num > 10;
const isShort = word => word.length <= 3;

// –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
console.log('–ü–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª:', countItems(numbers, isEven));
console.log('–ß–∏—Å–µ–ª –±—ñ–ª—å—à–µ 10:', countItems(numbers, isLarge));
console.log('–ö–æ—Ä–æ—Ç–∫–∏—Ö —Å–ª—ñ–≤:', countItems(words, isShort));



// –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏ üìö

// –°—Ç–≤–æ—Ä—ñ—Ç—å —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, —è–∫–∏–π –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó.



// –°—Ç–≤–æ—Ä—ñ—Ç—å —Å—Ç—Ä—ñ–ª–∫–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é calculate(a, b, operation)
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ operation(a, b) —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// –°—Ç–≤–æ—Ä—ñ—Ç—å 4 —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ–ø–µ—Ä–∞—Ü—ñ–π: add, subtract, multiply, divide
// –£ —Ñ—É–Ω–∫—Ü—ñ—ó divide –¥–æ–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å
// –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –≤—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
// –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –∫–æ–¥:

// –§—É–Ω–∫—Ü—ñ—è calculate —Ç—É—Ç
const calculate = function(a, b, operation)  {
return operation(a,b);
}
// –°—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ–ø–µ—Ä–∞—Ü—ñ–π —Ç—É—Ç
 const add = (a,b) => a + b;
  const subtract = (a,b) => a - b;
  const multiply = (a,b) => a * b;
  const divide = (a,b) => {
    if (b === 0) {
    return false
  } else {
    return a / b
  }

}
// –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
console.log(calculate(10, 5, add));      // –ü–æ–≤–∏–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–∏ 15
console.log(calculate(10, 5, subtract)); // –ü–æ–≤–∏–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–∏ 5
console.log(calculate(10, 5, multiply)); // –ü–æ–≤–∏–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–∏ 50
console.log(calculate(10, 5, divide));   // –ü–æ–≤–∏–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–∏ 2
console.log(calculate(10, 0, divide));   // –ü–æ–≤–∏–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É


// –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å üí¨

// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–≤—Ç–æ—Ä—é—î –ø–µ–≤–Ω—É –¥—ñ—é –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞–∑—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.



// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é repeatMessage(times, messageCreator)
// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ü–∏–∫–ª for –≤—ñ–¥ i = 0 –¥–æ i < times
// –ù–∞ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –≤–∏–∫–ª–∏–∫–∞–π—Ç–µ messageCreator(i)
// –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –∑ —Ä—ñ–∑–Ω–∏–º–∏ –∫–æ–ª–±–µ–∫–∞–º–∏


function repeatMessage(times, messageCreator) {
  const results = [];
    for (let i = 0; i < times; i++) {
      results.push(messageCreator(i));
    }
    return results
}



console.log(repeatMessage(5, i => `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è`));

